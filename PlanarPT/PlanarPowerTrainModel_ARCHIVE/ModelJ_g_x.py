import math
import numpy as np

def CalcJ_g_x(x,u,d,theta,nn):
# auto-generated function from matlab
	K_Q__Propeller = theta[5];
	K_T__Propeller = theta[6];
	N_p__Battery = theta[7];
	N_s__Battery = theta[8];
	R_s__Battery = theta[11];
	Rm__Motor = theta[12];
	kV__Motor = theta[13];
	u1 = u[0];
	u2 = u[1];
	x2 = x[1];
	x3 = x[2];
	mt1 = [1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,((N_p__Battery*u1*2.7e+1+N_s__Battery*R_s__Battery*u1*9.0e+3)*1.0e+1)/(kV__Motor*np.pi*(N_p__Battery*3.0e+2+N_p__Battery*Rm__Motor*2.0e+3+N_p__Battery*u1**2*9.0+N_p__Battery*u2**2*9.0+N_s__Battery*R_s__Battery*u1**2*3.0e+3+N_s__Battery*R_s__Battery*u2**2*3.0e+3)),(N_p__Battery*u1*-9.0e+4)/(kV__Motor*np.pi*(N_p__Battery*3.0e+2+N_p__Battery*Rm__Motor*2.0e+3+N_p__Battery*u1**2*9.0+N_p__Battery*u2**2*9.0+N_s__Battery*R_s__Battery*u1**2*3.0e+3+N_s__Battery*R_s__Battery*u2**2*3.0e+3))];
	mt2 = [((N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*6.0e+3+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u2**2*9.0e+3)*-3.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt3 = [(math.sqrt(6.0)*(N_p__Battery*2.7e+3+N_p__Battery*Rm__Motor*1.8e+4+N_p__Battery*u1**2*8.1e+1+N_p__Battery*u2**2*8.1e+1+N_s__Battery*R_s__Battery*u1**2*2.7e+4+N_s__Battery*R_s__Battery*u2**2*2.7e+4+N_p__Battery*Rm__Motor*u1**2*5.4e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*1.8e+5)*5.0)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt4 = [((N_p__Battery*u1*u2*2.7e+1+N_s__Battery*R_s__Battery*u1*u2*9.0e+3)*3.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt5 = [(math.sqrt(6.0)*(N_p__Battery*Rm__Motor*u1*u2*5.4e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1*u2*1.8e+5)*5.0)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt6 = [(math.sqrt(6.0)*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*6.0e+3+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u2**2*9.0e+3)*-1.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt7 = [(math.sqrt(6.0)*(N_p__Battery*u1*u2*2.7e+1+N_s__Battery*R_s__Battery*u1*u2*9.0e+3)*1.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4)),K_T__Propeller*x2*2.0,K_Q__Propeller*x2*2.0,0.0,0.0,0.0,0.0,1.0];
	mt8 = [((N_p__Battery*u2*2.7e+1+N_s__Battery*R_s__Battery*u2*9.0e+3)*1.0e+1)/(kV__Motor*np.pi*(N_p__Battery*3.0e+2+N_p__Battery*Rm__Motor*2.0e+3+N_p__Battery*u1**2*9.0+N_p__Battery*u2**2*9.0+N_s__Battery*R_s__Battery*u1**2*3.0e+3+N_s__Battery*R_s__Battery*u2**2*3.0e+3)),(N_p__Battery*u2*-9.0e+4)/(kV__Motor*np.pi*(N_p__Battery*3.0e+2+N_p__Battery*Rm__Motor*2.0e+3+N_p__Battery*u1**2*9.0+N_p__Battery*u2**2*9.0+N_s__Battery*R_s__Battery*u1**2*3.0e+3+N_s__Battery*R_s__Battery*u2**2*3.0e+3))];
	mt9 = [((N_p__Battery*u1*u2*2.7e+1+N_s__Battery*R_s__Battery*u1*u2*9.0e+3)*3.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt10 = [(math.sqrt(6.0)*(N_p__Battery*Rm__Motor*u1*u2*5.4e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1*u2*1.8e+5)*5.0)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt11 = [((N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*6.0e+3+N_p__Battery*u1**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3)*-3.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt12 = [(math.sqrt(6.0)*(N_p__Battery*2.7e+3+N_p__Battery*Rm__Motor*1.8e+4+N_p__Battery*u1**2*8.1e+1+N_p__Battery*u2**2*8.1e+1+N_s__Battery*R_s__Battery*u1**2*2.7e+4+N_s__Battery*R_s__Battery*u2**2*2.7e+4+N_p__Battery*Rm__Motor*u2**2*5.4e+2+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*1.8e+5)*5.0)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt13 = [(math.sqrt(6.0)*(N_p__Battery*u1*u2*2.7e+1+N_s__Battery*R_s__Battery*u1*u2*9.0e+3)*1.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4))];
	mt14 = [(math.sqrt(6.0)*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*6.0e+3+N_p__Battery*u1**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3)*-1.0e+2)/(kV__Motor*np.pi*(N_p__Battery*9.0e+2+N_p__Battery*Rm__Motor*1.2e+4+N_p__Battery*Rm__Motor**2*4.0e+4+N_p__Battery*u1**2*2.7e+1+N_p__Battery*u2**2*2.7e+1+N_s__Battery*R_s__Battery*u1**2*9.0e+3+N_s__Battery*R_s__Battery*u2**2*9.0e+3+N_p__Battery*Rm__Motor*u1**2*1.8e+2+N_p__Battery*Rm__Motor*u2**2*1.8e+2+N_s__Battery*R_s__Battery*Rm__Motor*u1**2*6.0e+4+N_s__Battery*R_s__Battery*Rm__Motor*u2**2*6.0e+4)),0.0,0.0,K_T__Propeller*x3*2.0,K_Q__Propeller*x3*2.0];
	out = np.concatenate([mt1,mt2,mt3,mt4,mt5,mt6,mt7,mt8,mt9,mt10,mt11,mt12,mt13,mt14]);
	out_temp = [];
	for i in range(nn):
		l = [out[j,i] for j in range(45)]
		l=np.reshape(l, (15,3))
		out_temp.append(l)
	out = out_temp

	return out